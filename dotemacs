
;; Appearance

;(menu-bar-mode nil)
(tool-bar-mode nil)
(column-number-mode 1)
(setq inhibit-startup-screen t)

(when (not (null window-system))
  (set-background-color "DarkSlateGrey")
  (set-foreground-color "White")
  (set-frame-font "-windows-proggy clean-medium-r-normal-sans-13-80-96-96-c-70-iso8859-1")
  (setq font-lock-comment-face '(:foreground "Pink"))
  (global-set-key [?\C-z] 'undo))

;; Keys
(defun switch-buffer-immediate ()
  (interactive)
  (switch-to-buffer (other-buffer)))

(define-key function-key-map [delete] "\C-d")
(global-set-key [?\C-`] 'next-error)
(global-set-key [?\C-,] 'call-last-kbd-macro)
(global-set-key "\M-m" 'set-mark-command)
(global-set-key "\C-x\C-m" 'execute-extended-command)
(global-set-key "\C-x\C-j" 'switch-buffer-immediate)
(global-set-key "\M-i" 'yas/insert-snippet)
(global-set-key "\C-\M-y" 'clipboard-yank)


;; Default modes
(show-paren-mode)
(global-font-lock-mode t)
(auto-compression-mode t)
(add-to-list 'completion-ignored-extensions ".svn/")


;; External modes setup

(add-to-list  'load-path "~/.emacs.d/")
(add-to-list 'load-path "~/.emacs.d/packages")
(let ((oldpwd default-directory))
  (cd "~/.emacs.d/packages")
  (normal-top-level-add-subdirs-to-load-path)
  (cd oldpwd))


(require 'yasnippet)
(setq yas/root-directory "~/.emacs.d/snippets")
(yas/load-directory yas/root-directory)
(yas/global-mode)
(setq yas/prompt-functions '(yas/dropdown-prompt))


(defun load-ropemacs ()
  "Load pymacs and ropemacs"
  (interactive)
  (if (not (boundp 'dotemacs-ropemacs-loaded))
      (progn
	(require 'pymacs)
	(pymacs-load "ropemacs" "rope-")
	;; Automatically save project python buffers before refactorings
	;(setq ropemacs-confirm-saving 'nil)
	(setq dotemacs-ropemacs-loaded t))))
(add-hook 'python-mode-hook
	  (lambda () (load-ropemacs)))


(require 'auto-complete-config)
(add-to-list 'ac-dictionary-directories "~/.emacs.d/ac-dict")
(ac-config-default)
(setq ac-auto-start nil)
(setq ac-fuzzy-cursor-color "White")
(global-set-key [?\C- ] 'auto-complete)


(setq jde-compiler '("javac" ""))
(setq jde-jdk-registry '(("Sun1.6" . "/usr/lib/jvm/java-6-sun/")))
(setq jde-jdk '("Sun1.6"))
